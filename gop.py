import zlib, base64
exec(zlib.decompress(base64.b85decode(b'''c%1D$ZI9bVdf)d~OlUNc5{WCxUOV1Y%{h(}CwA<#c5;_)76L_aC3-1RCaHbN!XJu5aX^cr@!hpW?*)k)1lPOX0cq2ss26BI$jJZL`vvzC`aJVO4#^pc(yrsA^#oaq<jgZO&ph+I&Wk&l24PHsXf24$=rD?%N!^$p#^b;@odbuoCS>YPiR(wP<$0vlnoUQcHFWT;(O6rH!^6!r0%<1<CM0q^$9HFwffYH#WuV^(-90B<a}I208ne7|RT6NyG{CL`m41)iN%B7O9A}zqRp{Dd(+>P7@REF2+2bmirk3w`BFlUDkjoG|2eJ5m7k*diI~J7t{4|>*P<0rIpP?gu-HQTW{DwwOcU&*|7L8}I>!rv|3g4eOQ5;q3CeO>enuoxjKXzHYkcQ3<vB!?R+n-H`R_xRp4E`+iNRJrfIG#qE>+7MlZ;sq}JR8g+Cj`93jvoX5ChH$tu@zYpYaPfXasz)obatZkv11LR^@-*B;=Mt^hE6mEEIR;OG|C(~aUH5-E%vM^?(-rv6U$GLY({bDPU{U0DV~LXCO_>=t{e0T0A>5gkh6nWoLcc1W}*u%sT&-S86U(3hkz+<PcU`-Y_=vbLZe}Z(BXO`(?VW{DEvZ?w<d*)Y2;eL&~<!!?D}J=BqmOu<}`HuxNdBP&akun<P*yu5&Puv@212b!#^>Zj@|ihd@?wB{JBpiC&xc`>6b5JVw$Frg{d2XWrjKq0<SR6qhM-I4|BEIvoM6>eIz$TAIG;fi16QfpML1~vxWAdc7|!WI3Ri-unm|3eEFlEF^hLvuNVztMPw(7Q#wD*{m_N6&QMUJkS&kmQRp~6B6<FK7RT7<EN=Jap9RD_dHl#FPad8e|B%GvufIGw{uD+h9-kcl+J3<()|d7zPestVq;F(F=j0ADqAJ$p`qLTo2+-$*(0T$i9-BpazyzEGr$8)`AD>=gX5lNxizM3B(d}8&Y#G8-=n-hiPI#$(%TlBupzhP3F{dW{JkfU*RR2v<d_@{m(4P=Z*0k@Bt+*eDKtcU@Y`Jy%6Msn@I@c*;ymYZm5NAV_VjqQujzD*etwG=oiG67K+eZoL2hhl^^=+JzMF>;}s<+Jz(9diTKv8}&uy$el`+e7U<9@#mI@XTV-c)?oY%i*DS>#)wX!Uxe=EpTU-3WYjtgt544R8{@r6*Jt32_6<_noj$m69ISN7NrpYYK!mtQ#Ns26>qnzyG^W4Du4Wuz?Tou1TW!&~tjmAaqCLxIeK*FpQQ_4(tz~{`3n%?%uwAle~5N=G!-}5rVHW@C3RSg8K0>Ay;p|agDtGA$jBd56Qb%Ze1t!8&}?LAk-fp7oZ+Go)_#dfGaxMuG~=>=bUV)9$1&aH$h8|5eg$GI;pnF_pjZ&di&jLfDm%!efUEWL+J{p0w|Wl-kTN-bCV2$a0rmHEg5(-(9?m)l1U-R3N>~+z84Jgbfsu2P&i_{v;C3ZG4G6ly*MBFUGq)Lb_PMPTi#DV&=yBXXZwShOT78N!EC1-V#+zh?Bw{N4+<9Wg~R#>!%fm5U2-1Tc!O*vGl)nP(Q-Y`9SSlBza~A6cSnKe?mGF7CQ7nM3T;l5&8u@F?T=9g+zn@rTEeREu{E^9-G1bOROy4EcG%gzb8`GUGCVo{0`S6kV?6)NCA;H*iZ<2+c%1*cKYESSKU}}1LyMgJ(JXL>Gk{sdQ?A>_hX!PkN(3P>4vX(3kWjIq?z1!w%I}VcHQrLx=x5*Q!4E)J-qiq)G(&+&IUIDhfsV0#^W^wnEu_NZzwtS?2|Rp0g+V#~QIqWDiI<Mm3mGPlENN|Fl?4j8#Q>u4ryN`{{+mQQ;z=>}KrhvVDF~x|U?s{XXj_n!Qnx_Tz%nzcRA+^mrO?UYE!R+Xj3d$U2Os%Iq6rTQ)=HKXWfNF#e!?$oU}>(i!<k#2Yk-N|XE`G1?9qc%^U|;a1y|waO|;}yT&2L76nM<QpcW)a6+BW&{V#S0ftg+acIZx#SEvwIKwz%teh|x5EWspkLjL||pOG7E9@_J-_`nb!Rmdj~QEmL(Cf?Uy&Opz?>>54@*bkjau;=6vujYo;Z5~XVx^4x&Q>0bkX)Z{0$49p2__K)<qA4LE#N2fbqk01s2rG<x9R)E^^l~wL1X?9I0)TlU$FxWmC5o-OC-#`SCwTukH;B=|;&|s$I!c8Vu%x2DB7@8w1{S)%kP0d^5tCXyVan3)fAN=u86k{^^M==sun`YxTk9-a33NW3nE$NA3sUA?L?f3d@yYQ|KtrKoUM*2_?NiseXtYaM#WFq+k(3i$*Jsf9Qj3UFk{}{92DjGJ&n03_BvuqO+b|U`rDVrD-1mUpLXoX)WiFhT3BA)1%7{Ep?#N%r9yMWk7wUVUpjx)wL4|!c4tD!ild7tj>7aJFAV&a`4JSm}D>IsUV7VHvs$_vks5AAbeuMz@`7i-fA<aFDD#(yov`N&{Ls8MuPl7xOh23*xpsY1E5x#&4<OCJX@Gbl+-acrkRX_DOxX!f5c*gVJOa#VZ<~*{w;wvK=MAg0%YKTB$I9oAVQoSr)=ol7l&I>)%e-|jA`fi=!<f9^aIGapmvC$+uO+eTXq*Skq@S<7h^sUHtU1km{9CRw)l(NmM4AV~@0{6_wR*7jcM}-%RT)&=iSLnPI%^?i|<&8`B7RH19NI%Y|IGSbxBk4r~9x5*ybE!o)w)`>l5%nL629*miuYhJ0r?L@=cLD4Ub<=yU??e*aNeXzpyVXwljieXDhfeyT)M8E@YUuNP^6<$IQwhNvpHWB(`l5v9te+8PvdJO%PP|UXGVe)~%I;e*4#2efj^|9!nYiah?!W_0>Hrm5qgh*De`)J`?yzS7WMg}M=<ebF&{O&oicZ8co!_-44Fv|XxOe&TWthmoSNc>35-41yG3TIi@+Sl;Vt-BB3Wp}`Tnm3D->^OGVbhPtEg)WRSnoEH@3f6Z+Qv>>ZlV~>Tobt~ue(ai*T?b118F!sl+mWb;Q8(K!7Pp`6Oo%|d#=5kH~46iavUCIPaow6Iw+lbr>jynwU&q6ogLsjqAS4QfG03#QV>GhYVKsTWqC1B#GVC8t+Bloh4xE5gOObeMkO$#y^*n9(+F>czt(v2i982DIDF=h!6pEGN~1H#tN@iHb*Ctvx(Z=krt2r5)gn$~H<4@f9}MFGYtbles=n_ScR`!|rHdY7>LWY;WsW5r^&gOR(&@G#%lx16@w04asmnS4NjvJ(U^<%$N3cu+&VggkV$fb}5X3+PhM`f!e2}ybDk8(co*}`Q_h(Lcc!v{Ay=F%Hme+03n#ei!z~dja#;axH0AOE(Kc<TwRP<7tpcPE&4YEo6ndcSDLMydqiqumJv{9xHX3>m#;eXno!D3`%7vBAPrqJoBik3oK-dN~t|KZc0{WH0Fa{Lc&t_4%jgJLpvPmX`&zd%-R;sWbxxiL=1c@X<m2ii;qddCeXFwigrbtvCJAcCj8svNLo+z>gZPw5;KwxoxM-#l_;6I(g+xjvF{6gAOul=y1$L&MdI@?AL9vl3oRUWun`W&HmBz9|}oA;bch^J*YN7%CWUNzJTlRE%?AWrKljQ*Ru3=g#e0I&WW2`>lnw65k%Th=w3Gvc4$D-6*2;9L$l&UmTJl3<`<BLKq8s0cibSs1aoBT5gtVQ(u=<8^s@vToY`?T=<dsu(X~F{Ve8=t9bs~35GVYrJ{Ku$|dX-^&J;UoRb?<VWs|pAUos%R!T+*u~bw3N(dt*4p|zWBX7+gC2kZNx{bs6ZvoxI*&#5YxS(M0tciK6z?i_hYoky(QqE&xXtKOp>~XuP&MWLsk(oW~at{LxoI`dai;E_9_v*>xU*R-&PagkI%mdWCOUPOuv3LK7!x|#@RpKAhgTk9inw2#i^0`-+(4^yml~f9~zl>5S6EVAEP%WfkKH_++A<}Ex4>k$#LPn>V3Sj!pKb!FAJ|jnlu=%5@2xc)**$Jp(ggm^+_+g<uQXcVgmGS7hUg-{<ozRK$>!BEtZ!{K&22vs$m}n4j`&(nznS3x~QPGNKF*y^vn610B4jD|a3`Q!!Q)XY%0c0)DiW`L=R!v7zr25Xu@k6joPLBV=XKsXDoJEtwn*el#ZF~SP<cQgVI&dAvMkcx@GLIdMUKcF=*rjegqiv+*y0U!?6-4V1MNocKnp&Piw<(*HWfBzwd#JS8`6z;tDF9fX^{kQ&SyXeg7FoeMmQ3FcH+{{iHFBuh4ZIOZFrV*yLpH4OPYYVu8aj~QGbeHDyg3-PaMdwjKW;IM$#rI}^T4BviduAy0()sRg;9G!<Ga#mrB*ni>Snan-cA+Arof_Nxt?m|sPg3#D4<%~CIn;tgO;b?i&iw6&fZ`;b7N^y7)fcu{^8S~{DRzN8qr|>C}1iYk18K=bg6<`n9%ioof<tnY+{eU{?ei$L7bpWDp0$N1JWB^5_iyLN%)G^ZGefRm1S-s*wYAU4KK^ITt{n|_=H=PV~8ZYdIm7UEzS+1x(Rwa6B4z?b~;ZxZM_-kqfp$N<r)N>mJUzRVYdQH>NJX+Me$h$8Te1jn#F-RJ!rMzT{N|H(O`;sMl;`{o^*9RVdb$u*?(5F_;tLMk((Z-ng>wn2y^vQ;<^5AMlO;gPB9O7sBMBvK{5XD^&`l1ghQa?4wz7-@5feNW{M@S`>sC>_WK|ahMs;(YaF?9LK6q80alZlX)^qh@HQrlFad-YdP$?p^V60|bwyxZ+v7frIjgk}5XwV&c?h-_M2;qCCMUMYsuJN88YTKxLU(yrL_U==JWS)j^83^!(`TNiiY|BVN6#|2>%sgppF5T*n@gPR-4Z^Rc4R>~b(L9`?caiMtyUd9dHjV>{Q2V;;H6zGnM;`HcC8+1mu6bD0wDu%(O`<SvgV{pPsjb7PpfKJs-)Gr3SC=X%_58RtbD4J3HVtuW<9zNs@gzf(k?2=r}AYt`NZaTWrmOoU>RB8v>a}$hPJc`%HUjCLQOXtf~WJJ#KHWLUrobRr4r{er4s7as7MqdIbj%tr`9-i>8xy6t-;zYvrb!`F6Qa*H({_(ZCokCMRV%4+U7K*fJ9)H6AECZvviM_!~P2Lgbvt}wdf4rvNW2x{eczqZ7cZJlZV2^k^C(V>c&#-eCh)#A^IB_)^tcq?P678iUJ3)9OuH64nVm+qAXig@5m=WF6liT;uR@R#JCEC(`u@RP+}F&bWt*Y02^%I&oD0b-m=lx5G4ehm1d$aZW0=<PTL|aM?xa4M(eB9Rl(s?mPFtepfs72W@#`gH_*M+h*AvK%c}?&Omul8AMzeK-(Ia5m`;Hhw*M!yhKI&jSJiG#@62D6&c@llD6Pb+P8%#(l>YAp6Bea24K^%F%LgMCHh+;{MVD3<m1k<Q%jugj-{o|cro5agoAvqh6rw4M(iuiu7Nt`PXH3<iHH%V(XwIUvM6_p7s_YiY*1ddXOIP&Vk?`D+@Z6E`+>s#adhSSAn4UWls-)+RgvIH(BO#ZTiwa@V?XO8)5lyysk(*!(7ap8pk7&%b@_<y`DI^Ddu{#r|%3h&-s<1RdPMkWBG@z#HL!?wMuhX^IvD7nMX8gIkOgvlFmsggE=4p?c$)|;xPGKgLw_*jrY8pych0`P3{0yGyVsH(z7g-_7(N*k{D69@@lEKOG-;(<?OXpI{ywtTrS-;pF#i}m4T-M5<R_&3-L8$Im@?%Lpl3kB3b|!pdE7I2z$gaN=^g-X)#RV)CP8Z8AN7w9sTDVKvqnM64^4;8F4lC`dVq2IJZ?bI%Gteiv@+5B_S%0nH-ye8!uTuanahd8)GU525`k~(Yl|ZiH24On<FZGOrj_0}V_`b2t7yn6LE}wVrZ|ob}HCmKA$P%X)tL`=Ni@H^>@}npd2bhY!@st?j)ivtnDjTvLBRvVOaNq{+56HQ#&=pmzj{2U8jwk(2tnB9DWX7jLKY!+=n0a^-v+f;I`Y>>j(EBN+H|b%S%2~8HHX%srwb&Z;vaG0JX+f3#$PUCbD{h0x+bgH?(tf-4@nR}?RQZUPx<-vA)Hx0792bo&1ew}^Al-Bkj>Ny;2?l_I4B?jhLchVqNV!EvrJ^h2`ctTP1^R)3>`T;^nHv;Fb*f_26oZB4#JAX~85wJh4gaf(GU$Jcv_yEt^Xf+8tBc0gFxYQ(+imKCGjafNDR13#7)%oEFxU;nhD261T}|DixpJg$2w&bSe64knVsUpf1@PjFG>?k4_CQ-saiVGnZ47loa&xw1Ru#Wxw<M-dFgnf5=q@}wkT2!FI>t?)KlI5Ri!x|Q+#bpBWR9*P#gZM0cV(cv=}B;G2Q8b`IX+Nij2Sl*=Q+7t2}j33USDx2s>*dVwBnH)xJdvu%Yc&~xR=@R1K&v}ffu+*{&bq&L&~nzYRL<&8UQqMjlF&S@a<vU$Z%Vk{<NY!;k5-Oiw#KI?m1yxL2lfOBz6PDo|aoIqa|jI3_2}Z<j(hJ^GBr9Zqq=N!A_M^SEQ><9I)`yFW5nGU`pby-jPdp9pL%1H15g?%pc7^J5(LPo*#OpCzB)JYQk_gGbPgLQ1D<VO$t1qNj?V=r^A?uH+mT2!Hk}*%?^gh+ejrb8}8+J2eFwJDqGiGc%k3c3~VmSQH^|XOq84<M9L2l+Uly_Ab9aQ|35Dw3Sw5xSu-dEC||}69oXRV^VjHU)b=<4)B|7Iqr1cnQPx}>3#HkrtO?dHI7!zA5M^u1;Zk0N<;tCyGJh(|SAoLwi7ozl)ABKj@(gi@2P%tJRKS_Y`fSm5ckBdYIR6j#*&!}%LItd)nV&7*Zr=Xj+B2jzti8&-#C#PHwJ>b9GM=v7dh5?Ve0GRp)t3XRhysdG2Jh*h>iU)ISDqcFXzgc*C<^ZB;OWklH=Z4uu<{BM53@bfd3SfrH@e3BN6E>fn9iD|=WDOT+Vh2;E(Yo6a{qV!MOi#zVF0vhe9aSa0~TBZm>6HXSnVi2%__}oaP?wI0FB`*v0mAQMHoNH+po!wm3B%Ol>A9RYdNbUO2}EPyXorp$tQm;<uc^J6Z_}K7tI~0pw+ox4!pqLZ6U{!oNn304Fv<0qeWwik|h@vb7<90Fe%+$ue`8JAJRSLF85`3xSwu!yP#Zl+n|c3;Y%rm>{-r9s)Tl_j&dhg#@{MVnNJHh6I>;e8HQgtqMBAy&I`;@4l(5SpSwGZ-Ex&W+Yb2B70PzLlS*42kMNgK47}eOz+BiIc$UAb5mdYuEx#8xFG4m|g%+)b+NpRi40{wN*y2;v=xKhcfyorehvybzB3n|+y)m65SE+QEj@f~7cx8ftHm4zu=tQ^I@9eRW_1$OzqNB6V{QDK1Dh4`Lk|PejXN9iS@~nXaq*lY0)Eb1I*Qd<D8i(f~EPKeuU5wKufs-T8@#}Ki8xPo71T^qf0{k4gG5>Xt!5`gfvp4@Q>bIKz))&D?JRFX4O_t-y!}(Wbtf|l<^2ek@$~lx$je4EO?y2w}21#5|ii=k2DjnVh^F^exc_R{XZyt041}=BCypxqyIIglehSk1!wT)g`Wy4Fcd9wmGG0A*xaj&W^Z>qY?UfB`e3F#)UObEJ4pO#pKwTPe=bw#-|fEp`|8K<6|Zw)&x!HSX{zZuY*{`7Xs4$W{Hu1k-IY5+fFb>&!Y@-;ywWw?cQRGjJA=6)CFI-4P}z($p0-ZSl8YI;;=4vQE6t+=L-#i#U$P;dzhkd>UfC3UZoIH9d5$J$vf>Z8m%8QL;#SJEK;g5Q<b7Uo-0aV$$ru!EDwpC6LYVw<5h$x#%Cb*G`ZmW~dUWWWaijhdcX3%>I4&g+HsLzkrW9g2XqF7T)17G>Ol*={C00#ADVu-<NxjdmLtgx(BQ-AYjAqp9kj!M_hNyo@*{0zDaLO}C@>)?{5Vkh7Y&TXmUN5i^=Iha|_3NV=Jtx!Z7H1we7ks6-zdl3z19tW7~}%$V$=;DUd%(7#iDf@M#@E3*9+4!qNtimPm+Jl!_QZ+sg+j=pBMe$Lm1M@Vz8+biWe9~BFePQ7zcxrOa4b{;;9gA=-y_Z*%YmD)XniZ#`kN_PD%*wt6IYfr1kp24oW@4&7)jo>)LU2$sVcZr>73j;0HcakY&o+hl6>Q<>wR^<s*+5ox2C^gfQIGN-u6PW*xgyNC{Q6UTq^Ebuxw~6s~pR%Yc&hAt5X9<&)bdRbh#Rj{o2{&{+>#)F~8DkF=@h~ml9tQpy9Ao}%;@tY}oGZnKS0M#NYI$XvW0I<K|6#TJxM*U;aw@AXyQ`G~q}y6Alv;9}N_&{^+iAzCP;0BMqOmJXYMmEGMxJ^LVnHb`y+9@B3jK~)8aV`xXV!t{w#ej8aF!)ESerUHTFoK>B$A7}G4ZygexEwm`+X`r``owAm#_oKtLzsS(k$YgkSHAu6R%O_8v%e|gOTS@R}e^KAMa9o%^mhS?_C>p;~SUv+TjNWSKhQo?cE=QgX`DZZ|+~5cI{c~Mdx4|gmF(4deNH2V+7o5zsT8LFMe@016b`#_TX~oLbtW?ioMag(6!nv>++=wFgBMiUc9v7T();Ey=cX~EAQEpX>b@Eyti@t-Z*}x^{4L~Ske3M|G>F6`lIt#I+reNbT>BI8<#gWE;EljUXRAF)HQ&-LAkKZkKHNXAj!iCLl;frATrVYZo(6msEcQ75aGY|ejkDL`+UC_eZUV=(R+dG*CnXUq<&V0UjrwyI|ptAw4Oj}&`To~IYiUto4xr~1ZMBsxOO|ql;pu~h0gt%13)Mz$^=f*3-*#0;LXwl<+a5-=6>kLPCYa^UF6^ZQW1*z=kD}Pmu^9mu$^An2T%Rb$-(9?p|`+z?AXE$Sc-e3h8A>D)lEQa1%zROY@ss=_8bZ6G(%Rg=M{1wgjLKd1YQ-nbSvI$I<#Ujjbdjq?N7si!es=7uP9C?yF>h4pF$_ygPt)6gMF9>Np=pI{y9f(fNc8IrKhF^q{El{;8l5SCq3IQC-!4QHJPp1yfyiKP#^hZYe0`S?DMU&e82OMM#86K7x&Q)*sd$yL*Z(UgTRxjF&S6JMJ0_)Q%rFsc0D0>VszOyTL2+$TTii!ZfY4YyQVF<2s1OjEU)Thc;(idyV&L!MAW00?z5y<@y(=t-JAI<-wq?Boj7N?u<b~}l<92Zo<W1Uf%`6^GBP$9k7gGI8Z#SSAoJ(XW5*hTDwlcZ`gSn#-8jgV1^Rb<L_HD^d<zpY<{2iz0O%ztMXy$bo_&t%2kC{z?8ZS5#(xdcOWZQZ%F<!S3k%;3K6X9NTHi3+r2c(sW<})IUD9cr?N<rBxOm}Ja&YlNgIt+TJ?Hz*;D#HoZ=Anmp1(-yH?H4(_hyp?px<)r-Jn6Pj>BN$tar`>MEsB3v39J`<we+)i0=cvx2|9lD482JmT_m3K4_cJsI3I+MyoY+BMUV17M=hwu)>J<ep_G|rw-n?$+485dCj#owk?s(oIVIjDoNj<kM);c;={>CI-{h>C4kP8g^ZE=u~WaW(QcAg+Wa05dM!9WW%t<21^KLzZjPpT%=FUvWPTW(!t|gbKq}nJMN(o0QobEt7jQXCCXmb%aYa=2!op(zllG?PPM}4`ZV9CK4brOyGkF0cB4@taA{A{3r4fj@<3}xp4pl8tsD!nThA-FX!HnwViY~iyl$BNM_L%J+8#I4Zazj|!07SmqATQG&_w=3-ECTkHV}&K|6PgKhVaFfVMIE^tH7mv*8C5vAP$27mLb@!n?L~B%(0IbX=^e(YF%Wo`&zxm#=_L#{42?C(yr%I>7HX4UCt<f<;dl}?{qY^ANi;Kiq)0}-h?_^W=Telc!z?-li@S%DHe?TbP;O8yl-5m#f?ceRY%jWDNAL+sd&(Rt6+;K*EV+#ucK*l~`Mj4(0CtS6p%w1-BM<bq{wTB#1uPr)?jB}$p{Iw96iyadt_pg!DLwp_9u9`>#<+em2Xv5muQgv)yBs8XOSYnGHwom5>WEDw{X&-VgVf}u$I|wJbg4nQ>p;)`_>z>Q5MSL~T-aO&K?cAh*~K8X7C`B`=t8GcLq4fe3Iimy5us|9)SALtG(_3HR$9MP`C!UZU`|enIH-P9o$_c0I;Uu$8&pzy77(hyQ=C?;0(9tYpnm)-Uwun@J}q+!vW72RU;aorNfK7aNGc{Pmr;sgRVt(Z6iAP3ESLbgE5rZ(ZF2MN`Cr{4ci%pF{NL}%14aj{N&L~*Ukdh)oM{0j%NN*j6H;gufUb*+hgjlG>4K^Xs}i&7%bKw3`3Z#c$F|V3YO>x^qYJGA8@P&WC1-4s`!h6A5!#ba=3k*OW!`}}#HI2-PXOoKA$b!?-uE${#ja<DlNe~Xkg-YJkspLkpRRd`ddN#?^*@+@WzkK0xL4>4oA5F@4~kgJhM9Q|>erZvgBa=2@bt*8Y`qV}0#=1LBRP%>F9%O?+9Wjm0!k}EL!KVdCIGnpbS6xD$<i;3<eKs!an7uX-)sL1%p9xf''')).decode())